#!/usr/bin/env expect-lite

*LOGAPPEND $EL_log
@$EL_timeout
*NOINFO
*NOWARN
*NOFAIL

>rm -f $EL_SCANLOG $EL_POWERLOG $EL_BLELOG logs/*sample.log
>. ./bashrc
>

>>screen -c $EL_SCREENRC -L -Logfile $EL_POWERLOG -S power-${EL_testname} -d -m tests/log_power
; waiting 35 sec. for pod startup...
:35

; -+-+-+-> WaterGuru $EL_pod $EL_testname: Test idle current

$testitem=idleCurrent
$testvalue=NONE
$teststatus=NONE

:5

>tail -10 $EL_POWERLOG > logs/$EL_pod-$EL_testname-sample.log
>dos2unix -q logs/$EL_pod-$EL_testname-sample.log
>egrep -v '1e' logs/$EL_pod-$EL_testname-sample.log | wc -l
+$count=\n([0-9].*)\n
>cat logs/$EL_pod-$EL_testname-sample.log
; $count samples over 5 sec.

>egrep -v '1e' logs/$EL_pod-$EL_testname-sample.log | sed 's/^/+ /g' | xargs echo 0 | bc
+$total=\n(.*)\n
>awk "BEGIN { print 0$total / $count }"
+$testvalue=\n([0-9].*)\n
; average current $testvalue, expected range: $EL_idleCurrent_min - $EL_idleCurrent_max

? $testvalue > $EL_idleCurrent_max ? $teststatus=FAIL :: $teststatus=PASS
? $testvalue < $EL_idleCurrent_min ? $teststatus=FAIL
? $teststatus == FAIL ? *FAIL
>

>echo `date +%C%y%m%d:%H%m%S`, $EL_testname, $EL_mfg, $EL_user, $testitem, 0, $testvalue, $teststatus | tee -a $EL_stationlog
>


; -+-+-+-> WaterGuru $EL_pod $EL_testname: Test BLE current

; searching 10 sec. for BLE address...
>>hcitool lescan >> $EL_SCANLOG
:10
>^C
> sort -u $EL_SCANLOG | fgrep $EL_pod
+$address=\n(([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})) WaterGuru:$EL_pod
? $address == __NO_STRING_CAPTURED__ ? *FAIL

; connecting to BLE...
*/[$address][LE]>/
>screen -c $EL_SCREENRC -L -Logfile $EL_BLELOG -S $EL_testname gatttool -I --listen -b $address
>connect
<Connection successful
>
>>^A
>^D
>

$testitem=BLECurrent
$testvalue=NONE
$teststatus=NONE

:5

>tail -10 $EL_POWERLOG > logs/$EL_pod-$EL_testname-sample.log
>dos2unix -q logs/$EL_pod-$EL_testname-sample.log
>egrep -v '1e' logs/$EL_pod-$EL_testname-sample.log | wc -l
+$count=\n([0-9].*)\n
; $count samples over 5 sec.

>egrep -v '1e' logs/$EL_pod-$EL_testname-sample.log | sed 's/^/+ /g' | xargs echo 0 | bc
+$total=\n(.*)\n
>awk "BEGIN { print 0$total / $count }"
+$testvalue=\n([0-9].*)\n
; average current $testvalue, expected range: $EL_BLECurrent_min - $EL_BLECurrent_max

? $testvalue > $EL_BLECurrent_max ? $teststatus=FAIL :: $teststatus=PASS
? $testvalue < $EL_BLECurrent_min ? $teststatus=FAIL
? $teststatus == FAIL ? *FAIL
>

>echo `date +%C%y%m%d:%H%m%S`, ${EL_pod}-${EL_testname}, $EL_mfg, $EL_user, $testitem, 0, $testvalue, $teststatus | tee -a $EL_stationlog
>

; -+-+-+-> WaterGuru $EL_pod $EL_testname: Test temperature current

$testitem=tempCurrent
$testvalue=NONE
$teststatus=NONE

>screen -r $EL_testname -S -X stuff "char-write-req 0x001b `echo -n get temp | xxd -ps`\015"
:4

>tail -10 $EL_POWERLOG > logs/$EL_pod-$EL_testname-sample.log
>dos2unix -q logs/$EL_pod-$EL_testname-sample.log
>egrep -v '0.00[0-1]|1e' logs/$EL_pod-$EL_testname-sample.log | wc -l
+$count=\n([0-9].*)\n
; $count samples over 10 sec.

>egrep -v '0.000|1e' logs/$EL_pod-$EL_testname-sample.log | sed 's/^/+ /g' | xargs echo 0 | bc
+$total=\n(.*)\n
>awk "BEGIN { print 0$total / $count }"
+$testvalue=\n([0-9].*)\n
; average current $testvalue, expected range: $EL_tempCurrent_min - $EL_tempCurrent_max

? $testvalue > $EL_tempCurrent_max ? $teststatus=FAIL :: $teststatus=PASS
? $testvalue < $EL_tempCurrent_min ? $teststatus=FAIL
? $teststatus == FAIL ? *FAIL
>

>echo `date +%C%y%m%d:%H%m%S`, $EL_testname, $EL_mfg, $EL_user, $testitem, 0, $testvalue, $teststatus | tee -a $EL_stationlog
>


; -+-+-+-> WaterGuru $EL_pod $EL_testname: Test version current
$testitem=versionCurrent
$testvalue=NONE
$teststatus=NONE

>screen -r $EL_testname -S -X stuff "char-write-req 0x001b `echo -n version | xxd -ps`\015"
:4

>tail -10 $EL_POWERLOG > logs/$EL_pod-$EL_testname-sample.log
>dos2unix -q logs/$EL_pod-$EL_testname-sample.log
>egrep -v '0.00|1e' logs/$EL_pod-$EL_testname-sample.log | wc -l
+$count=\n([0-9].*)\n
; $count samples over 10 sec.

>egrep -v '0.00|1e' logs/$EL_pod-$EL_testname-sample.log | sed 's/^/+ /g' | xargs echo 0 | bc
+$total=\n(.*)\n
>awk "BEGIN { print 0$total / $count }"
+$testvalue=\n([0-9].*)\n
; average current $testvalue, expected range: $EL_versionCurrent_min - $EL_versionCurrent_max

? $testvalue > $EL_versionCurrent_max ? $teststatus=FAIL :: $teststatus=PASS
? $testvalue < $EL_versionCurrent_min ? $teststatus=FAIL
? $teststatus == FAIL ? *FAIL
>

>echo `date +%C%y%m%d:%H%m%S`, $EL_testname, $EL_mfg, $EL_user, $testitem, 0, $testvalue, $teststatus | tee -a $EL_stationlog
>


; -+-+-+-> WaterGuru $EL_pod $EL_testname: Test pad motor current
$testitem=padMotorCurrent
$testvalue=NONE
$teststatus=NONE

; running... (30s)
>screen -r $EL_testname -S -X stuff "char-write-req 0x001b `echo -n pad dist 10000 | xxd -ps`\015"
:30

>tail -60 $EL_POWERLOG > logs/$EL_pod-$EL_testname-sample.log
>dos2unix -q logs/$EL_pod-$EL_testname-sample.log
>egrep -v '0.00|1e' logs/$EL_pod-$EL_testname-sample.log | wc -l
+$count=\n([0-9].*\n)
; $count samples over 30 sec.

>egrep -v '0.00|1e' logs/$EL_pod-$EL_testname-sample.log | sed 's/^/+ /g' | xargs echo 0 | bc
+$total=\n([0-9].*\n)
>awk "BEGIN { print $total / $count }"
+$testvalue=\n([0-9].*\n)
; average current $testvalue, expected range: $EL_padMotorCurrent_min - $EL_padMotorCurrent_max

? $testvalue > $EL_padMotorCurrent_max ? $teststatus=FAIL :: $teststatus=PASS
? $testvalue < $EL_padMotorCurrent_min ? $teststatus=FAIL
? $teststatus == FAIL ? *FAIL
>

>echo `date +%C%y%m%d:%H%m%S`, $EL_testname, $EL_mfg, $EL_user, $testitem, 0, $testvalue, $teststatus | tee -a $EL_stationlog
>


; -+-+-+-> WaterGuru $EL_pod $EL_testname: Test RGB current
$testitem=RGBCurrent
$testvalue=NONE
$teststatus=FAIL

; running... (25s)

>screen -r $EL_testname -S -X stuff "char-write-req 0x001b `echo -n 820B46FF | xxd -ps`\015"
:25
>screen -r $EL_testname -S -X stuff "char-write-req 0x001b `echo -n 80 | xxd -ps`\015"
:5

>tail -60 $EL_POWERLOG > logs/$EL_pod-$EL_testname-sample.log
>dos2unix -q logs/$EL_pod-$EL_testname-sample.log
>egrep -v '0.00|1e' logs/$EL_pod-$EL_testname-sample.log | wc -l
+$count=\n([0-9].*)\n
; $count samples over 30 sec.

>egrep -v '0.00|1e' logs/$EL_pod-$EL_testname-sample.log | sed 's/^/+ /g' | xargs echo 0 | bc
+$total=\n(.*)\n
>awk "BEGIN { print 0$total / $count }"
+$testvalue=\n([0-9].*)\n
; average current $testvalue, expected range: $EL_RGBCurrent_min - $EL_RGBCurrent_max

? $testvalue > $EL_RGBCurrent_max ? $teststatus=FAIL :: $teststatus=PASS
? $testvalue < $EL_RGBCurrent_min ? $teststatus=FAIL
? $teststatus == FAIL ? *FAIL
>

>echo `date +%C%y%m%d:%H%m%S`, $EL_testname, $EL_mfg, $EL_user, $testitem, 0, $testvalue, $teststatus | tee -a $EL_stationlog
>

>screen -r $EL_testname -X stuff 'disconnect\015'
>screen -r $EL_testname -X stuff 'exit\015'

>screen -r power-$EL_testname
>^C
:2
>

>picocom --echo --baud 9600 --omap crcrlf --imap lfcrlf -r $EL_power > /dev/null
>>OUTP 0
>>SYST:LOC
>>^A
>>^X

; -+-+-+-> WaterGuru $EL_pod $EL_testname: Results
>tail -6 $EL_stationlog
