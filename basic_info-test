#!/bin/sh

## usage:
##   $0 <POD>
##

echo " ==== Setup `basename $0` ==== "
pod_name=${1:-testpod}
pod_address=`fgrep -his $pod_name podnames | awk '{print $1}'`
export EL_DELAY_WAIT_FOR_HOST=6000
export EL_SHELL=/bin/sh
cp /dev/null screen.log

# fork to expect-lite
expect-lite c=`basename $0` el=expect-lite log=`basename $0`.log d=$PWD r=localhost\
    pod_address="$pod_address" hex_command=$hex_command pod_name=$pod_name
exit $?

*NOINFO
*LOG
@6

; === Connect to $pod_name ===
# launch a screen running gatttool with log
# connect to pod and put screen in the background
*/[$pod_address][LE]>/
>screen -Logfile screen.log gatttool -I --listen -b $pod_address
-<Usage
>^A
>H
<logfile
>connect
-<connect error
<Connection successful
>^A
>^D

# save screen id
>screen -list | grep pts | sort | head -1
+$myscreen=([0-9]+\.pts.[0-9]+.[a-z\- 0-9]+)

; ==== Test "get volt" ====
# "get volt" e.g. "Vbat =  5.67"
>echo -n "get volt" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd\015
<Characteristic value was written successfully
#<Notification
+$cmd_out=((.|\n|\r)*)
!expect timeout {send }
>^A
>^D

; ==== Verify "get volt" ====
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps
#> echo -e $cmd_out | egrep -a Notification | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<Vbat
#cp /dev/null screen.log

# "get time" e.g. "UTC time: 17:53:47"
# "get date" e.g. "UTC date: 2018/10/02"

; ==== Verify ====

; ==== Cleanup ====
>screen -S $myscreen -X stuff 'exit\015'
>killall screen
