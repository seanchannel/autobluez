#!/bin/sh

## usage:
##   $0 <POD> <SSID> <PSWD>
##
## This script is limited to SSID and password of 10 chars or less

pod_name=${1:-testpod}
pod_address=`fgrep -his $pod_name podnames | awk '{print $1}'`
echo " ==== Setup `basename $0` on $pod_name ==== "

ssid=${2:-WG2}
ssid_len=`echo -n $ssid | wc -c`
pswd=${3:-clearwater}
pswd_len=`echo -n $pswd | wc -c`

timeout=${timeout:-15}
export EL_DELAY_WAIT_FOR_HOST=${timeout}000
export EL_SHELL=/bin/sh

# fork to expect-lite
expect-lite c=`basename $0` el=expect-lite log=`basename $0`.log d=$PWD r=localhost\
    pod_address="$pod_address" ssid=$ssid ssid_len=$ssid_len pswd=$pswd pswd_len=$pswd_len \
    timeout=$timeout
exit $?

*LOG
@$timeout

; ==== Connect to pod ====
# launch a screen running gatttool with log
# connect to pod and put screen in the background
*/[$pod_address][LE]>/
>screen -Logfile screen.log gatttool -I --listen -b $pod_address
-<Usage
>>^A
>>H
#<logfile
#>
>connect
-<Error
-<connect error
<Connection successful
>
>>^A
>^D
>

# save screen id
>screen -list | grep pts | sort | head -1
+$myscreen=([0-9]+\.pts.[0-9]+.[a-z\- 0-9]+)
>

##-------------------------------------------------------------------##

; ==== Test "ssid reset" ====
>cp /dev/null screen.log
>echo -n "ssid reset" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
#!expect timeout {send }
>>^A
>^D
:2
>

; ==== Verify "ssid reset" e.g. "ssid chars = 0" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<ssid chars = 0

##-------------------------------------------------------------------##

; ==== Test "ssid save" ====
>cp /dev/null screen.log
>echo -n "ssid save" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
#!expect timeout {send }
>>^A
>^D
:2
>

; ==== Verify "ssid save" e.g. "ssid saved" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<ssid saved

##-------------------------------------------------------------------##

; ==== Test "ssid set" ====
>cp /dev/null screen.log
>echo -n "ssid set $ssid" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
#!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "ssid set $ssid" e.g. "ssid chars = $ssid_len" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<ssid chars = $ssid_len

##-------------------------------------------------------------------##

; ==== Test "ssid save" ====
>cp /dev/null screen.log
>echo -n "ssid save" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "ssid save" e.g. "ssid saved" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<ssid saved

##-------------------------------------------------------------------##

; ==== Test "ssid show" ====
>cp /dev/null screen.log
>echo -n "ssid show" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "ssid show" e.g. "$ssid" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<$ssid

##-------------------------------------------------------------------##

; ==== Test "pswd reset" ====
>cp /dev/null screen.log
>echo -n "pswd reset" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "pswd reset" e.g. "pswd chars = 0" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<pswd chars = 0

##-------------------------------------------------------------------##

; ==== Test "pswd save" ====
>cp /dev/null screen.log
>echo -n "pswd save" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "pswd save" e.g. "pswd saved" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<pswd saved

##-------------------------------------------------------------------##

; ==== Test "pswd set" ====
>cp /dev/null screen.log
>echo -n "pswd set $pswd" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "pswd set $pswd" e.g. "pswd chars = $pswd_len" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<pswd chars = $pswd_len

##-------------------------------------------------------------------##

; ==== Test "pswd save" ====
>cp /dev/null screen.log
>echo -n "pswd save" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "pswd save" e.g. "pswd saved" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<pswd saved

##-------------------------------------------------------------------##

; ==== Test "pswd show" ====
>cp /dev/null screen.log
>echo -n "pswd show" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "pswd show" e.g. "$pswd" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
<$pswd

##-------------------------------------------------------------------##

; ==== Test "wifi test" ====
>cp /dev/null screen.log
@30
>echo -n "wifi test" | xxd -ps
+$cmd=\n(.*)
>screen -r $myscreen
>char-write-req 0x001b $cmd
<Characteristic value was written successfully
<Notification
>
!expect timeout {send }
>>^A
>^D
>
:2

; ==== Verify "wifi test" e.g. "WI-FI OK" ====
>
>egrep -a Notification screen.log | cut -f7 -d: | sed 's/^/0a/g' | xxd -r -ps; echo
-<Please try again
-<Unknown
-<SSID NOT FOUND
<WI-FI OK

##-------------------------------------------------------------------##

; ==== Cleanup ====
#>screen -S $myscreen -X stuff 'exit\015'
>killall screen
